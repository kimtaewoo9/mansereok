spring:
  application:
    name: mansereok-server

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:postgres}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:root}

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH_CLIENT_ID}
            client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
            scope: openid, email, profile
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            authorization-grant-type: authorization_code
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo
            user-name-attribute: sub

oauth:
  # google
  google:
    client-id: ${GOOGLE_OAUTH_CLIENT_ID}
    client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
    redirect-uri: ${GOOGLE_OAUTH_REDIRECT_URI} # 나중에 실제 서비스 uri로 바꿔야함 .
    # redirect-uri: http://localhost:3000/oauth/google/redirect
  # naver

  # kakao
  kakao:
    client-id: ${KAKAO_OAUTH_CLIENT_ID}
    redirect-uri: ${KAKAO_OAUTH_REDIRECT_URI}
    # redirect-uri: http://localhost:3000/oauth/kakao/redirect
  jackson:
    property-naming-strategy: SNAKE_CASE

  # X(트위터)

# OpenAI API
openai:
  api:
    key: ${OPENAI_API_KEY}
    base-url: https://api.openai.com

# Gemini API
gemini:
  api:
    key: ${GEMINI_API_KEY}
    base-url: https://generativelanguage.googleapis.com/v1beta/models

# 만세력 불러올 API
posteller:
  api:
    base-url: https://api.forceteller.com

# swagger
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

# JWT
app:
  jwt:
    secret: ${JWT_SECRET_KEY}
    access-token-expiration: 1800000   # 30분 (밀리초)
    refresh-token-expiration: 2592000000 # 30일 (밀리초)
    issuer: "com.example.app" # 추후에 서비스 이름 정해지면 수정 ..

server:
  port: 8080
